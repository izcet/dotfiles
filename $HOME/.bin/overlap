#!/bin/bash

# TODO allow to check for the overlap of more than 2 playlists 
# by `shift`ing the arguments

################################################################################
# error checking
if [ "$#" -ne "2" ] ; then
	echo "Usage: $0 <playlist 1> <playlist 2>"
	exit
fi

if [ -d "$1" ] ; then
    echo "Cannot overlap directory '$1'"
    exit 1
fi

if [ -d "$2" ] ; then
    echo "Cannot overlap directory '$2'"
    exit 1
fi


################################################################################
# variables

STAT_FUNC="playlistat"
if [ -z "`which \"$STAT_FUNC\"`" ] ; then

    THIS_DIR="`dirname \"$0\"`"
    TARG_FUNC="${THIS_DIR}/${STAT_FUNC}"
    
    if [ ! -f "$TARG_FUNC" ] ; then
        echo "Error: unable to find exec or function '$STRIP_FUNC'"
        exit 1
    fi

    STAT_FUNC="$TARG_FUNC"
fi

ONE="$1"
TWO="$2"
NEW="overlap_$ONE_$TWO"


################################################################################
# logic

# find the matching lines
grep -f "${TWO}" "${ONE}" > "${NEW}"

# print the stats of the first file
echo "$($TARG_FUNC $ONE)"

# print the starts of the second file
echo "$($TARG_FUNC $TWO)"

# print the stats of the overlap
echo "$($TARG_FUNC $NEW)"

